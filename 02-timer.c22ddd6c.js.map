{"mappings":"YAMA,IAAMA,EAAiBC,SAASC,cAAc,oBACxCC,EAAcF,SAASC,cAAc,sBACrCE,EAAQH,SAASC,cAAc,UAC/BG,EAASJ,SAASK,iBAAiB,UACnCC,EAASN,SAASK,iBAAiB,UACnCE,EAAYP,SAASC,cAAc,mBACnCO,EAAaR,SAASC,cAAc,oBACpCQ,EAAeT,SAASC,cAAc,sBACtCS,EAAeV,SAASC,cAAc,sBAI5CE,EAAMQ,MAAMC,QAAU,OACtBT,EAAMQ,MAAME,IAAM,OAClBV,EAAMQ,MAAMG,WAAa,OAEzBR,EAAOS,SAAQ,SAAAC,GACbA,EAAML,MAAMC,QAAU,QACtBI,EAAML,MAAMM,cAAgB,YAC5BD,EAAML,MAAMO,WAAa,MACzBF,EAAML,MAAMQ,SAAW,OACvBH,EAAML,MAAMS,UAAY,Q,IAE1BhB,EAAOW,SAAQ,SAAAM,GACbA,EAAMV,MAAMC,QAAU,QACtBS,EAAMV,MAAMQ,SAAW,OACvBE,EAAMV,MAAMS,UAAY,Q,IAG1B,IAAIE,EAAwB,KACxBC,EAAmB,KACnBC,EAAa,KA2BjB,SAASC,EAAeJ,GACtB,OAAOK,OAAOL,GAAOM,SAAS,EAAG,I,CA1BnCzB,EAAY0B,UAAW,EAiDvB,IAAMC,EAAU,CACdC,YAAY,EACZC,WAAW,EACXC,YAAa,IAAIC,KACjBC,gBAAiB,EACjBC,QAAA,SAAQC,GAlBV,IAA2BC,EAmBvBC,QAAQC,IAAIH,EAAc,IAnBHC,EAoBLD,EAAc,GAnBlCI,EAAUC,KAAKjB,IACfF,EAAwBe,EAASK,WACLT,KAAKU,OAC/BzC,EAAY0B,UAAW,EACfL,GAAmB,IAE3BqB,OAAOC,QAAQ,sCACfP,QAAQC,IAAI,6C,GAgBVC,EAAY,CAChBM,MAAA,WACE5C,EAAY0B,UAAW,EACvBU,QAAQC,IAAI,wBACZf,EAAauB,aAAY,WACvB,IApCmBC,EAAEC,EAAMC,EAAOC,EAASC,EAzB9BC,EAGXC,EACAC,EACAC,EAwDIC,EAAmBxB,KAAKU,MAC1BpB,IA9DS8B,EA+De/B,EAAwBmC,EA5DlDH,EAASI,IAETF,EAAa,IADbD,EAAOD,MAqBUN,EAPhB,CAAEC,KAVIxB,EAAekC,KAAKC,MAAMP,EAAKG,IAU7BN,MARDzB,EAAekC,KAAKC,MAAMP,EAAMG,EAAOD,IAQ/BJ,QANN1B,EAAekC,KAAKC,MAAMP,EAAOG,EAAOD,EAAQD,IAMjCF,QAJf3B,EACdkC,KAAKC,MAAMP,EAAQG,EAAOD,EAAQD,EAbrB,OAuBUL,EAAFD,EAAEC,KAAMC,EAARF,EAAQE,MAAOC,EAAfH,EAAeG,QAASC,EAAxBJ,EAAwBI,QAC/C7C,EAAUsD,YAAc,GAAQC,OAALb,GAC3BzC,EAAWqD,YAAc,GAASC,OAANZ,GAC5BzC,EAAaoD,YAAc,GAAWC,OAARX,GAC9BzC,EAAamD,YAAc,GAAWC,OAARV,GAmCpB9B,EAAwBmC,GAAoB,MAC9CjB,EAAUC,KAAKjB,GACfoB,OAAOmB,QAAQ,wBACfzB,QAAQC,IAAI,yB,GAGf,I,EAELE,KAAA,SAAKuB,GACHC,cAAcD,E,GAIlBE,UAAUnE,EAAgB8B,GAE1B3B,EAAYiE,iBAAiB,QAAS3B,EAAUM,M","sources":["src/js/02-timer.js"],"sourcesContent":["\n\n\n\n\n\nconst datetimePicker = document.querySelector('#datetime-picker');\nconst startButton = document.querySelector('button[data-start]');\nconst timer = document.querySelector('.timer');\nconst values = document.querySelectorAll('.value');\nconst labels = document.querySelectorAll('.label');\nconst clockDays = document.querySelector('span[data-days]');\nconst clockHours = document.querySelector('span[data-hours]');\nconst clockMinutes = document.querySelector('span[data-minutes]');\nconst clockSeconds = document.querySelector('span[data-seconds]');\n\n\n\ntimer.style.display = 'flex';\ntimer.style.gap = '20px';\ntimer.style.paddingTop = '20px';\n\nlabels.forEach(label => {\n  label.style.display = 'block';\n  label.style.textTransform = 'uppercase';\n  label.style.fontWeight = '700';\n  label.style.fontSize = '10px';\n  label.style.textAlign = 'center';\n});\nvalues.forEach(value => {\n  value.style.display = 'block';\n  value.style.fontSize = '30px';\n  value.style.textAlign = 'center';\n});\n\nlet selectedDateTimestamp = null;\nlet selectedDateIsOk = null;\nlet intervalID = null;\n\nstartButton.disabled = true;\n\n\n\nfunction convertMs(ms) {\n  \n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  \n  const days = addLeadingZero(Math.floor(ms / day));\n \n  const hours = addLeadingZero(Math.floor((ms % day) / hour));\n \n  const minutes = addLeadingZero(Math.floor(((ms % day) % hour) / minute));\n  \n  const seconds = addLeadingZero(\n    Math.floor((((ms % day) % hour) % minute) / second)\n  );\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction updateClockface({ days, hours, minutes, seconds }) {\n  clockDays.textContent = `${days}`;\n  clockHours.textContent = `${hours}`;\n  clockMinutes.textContent = `${minutes}`;\n  clockSeconds.textContent = `${seconds}`;\n}\n\nfunction checkSelectedDate(DateTime) {\n  countdown.stop(intervalID);\n  selectedDateTimestamp = DateTime.getTime();\n  if (selectedDateTimestamp > Date.now()) {\n    startButton.disabled = false;\n    return (selectedDateIsOk = true);\n  } else {\n    Notify.failure('Please choose a date in the future');\n    console.log('Error: Please choose a date in the future');\n    return;\n  }\n}\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    console.log(selectedDates[0]);\n    checkSelectedDate(selectedDates[0]);\n  },\n};\n\nconst countdown = {\n  start() {\n    startButton.disabled = true;\n    console.log('Countdown is started');\n    intervalID = setInterval(() => {\n      const currentTimestamp = Date.now();\n      if (selectedDateIsOk) {\n        updateClockface(convertMs(selectedDateTimestamp - currentTimestamp));\n        if (selectedDateTimestamp - currentTimestamp <= 1000) {\n          countdown.stop(intervalID);\n          Notify.success('Countdown completed!');\n          console.log('Countdown completed!');\n        }\n      }\n    }, 1000);\n  },\n  stop(id) {\n    clearInterval(id);\n  },\n};\n\nflatpickr(datetimePicker, options);\n\nstartButton.addEventListener('click', countdown.start);"],"names":["$84b9dae4df53835d$var$datetimePicker","document","querySelector","$84b9dae4df53835d$var$startButton","$84b9dae4df53835d$var$timer","$84b9dae4df53835d$var$values","querySelectorAll","$84b9dae4df53835d$var$labels","$84b9dae4df53835d$var$clockDays","$84b9dae4df53835d$var$clockHours","$84b9dae4df53835d$var$clockMinutes","$84b9dae4df53835d$var$clockSeconds","style","display","gap","paddingTop","forEach","label","textTransform","fontWeight","fontSize","textAlign","value","$84b9dae4df53835d$var$selectedDateTimestamp","$84b9dae4df53835d$var$selectedDateIsOk","$84b9dae4df53835d$var$intervalID","$84b9dae4df53835d$var$addLeadingZero","String","padStart","disabled","$84b9dae4df53835d$var$options","enableTime","time_24hr","defaultDate","Date","minuteIncrement","onClose","selectedDates","DateTime","console","log","$84b9dae4df53835d$var$countdown","stop","getTime","now","Notify","failure","start","setInterval","param","days","hours","minutes","seconds","ms","minute","hour","day","currentTimestamp","second","Math","floor","textContent","concat","success","id","clearInterval","flatpickr","addEventListener"],"version":3,"file":"02-timer.c22ddd6c.js.map"}